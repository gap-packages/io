name: CI

# Trigger the workflow on push or pull request
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # The CI test job
  test:
    name: ${{ matrix.os }} - GAP ${{ matrix.gap-branch }} ${{ matrix.ABI }} - HPCGAP ${{ matrix.HPCGAP }} ${{ matrix.NO_COVERAGE }}
    runs-on: ${{ matrix.os }}-latest
    # Don't run this twice on PRs for branches pushed to the same repository
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
        gap-branch:
          - master
          - stable-4.11
          - stable-4.10
        GAP_PKGS_TO_BUILD: ['profiling']
        HPCGAP: ['no']
        ABI: ['']
        include:
          - os: ubuntu
            gap-branch: master
            GAP_PKGS_TO_BUILD: ''
            HPCGAP: 'yes'
            ABI: ''
            NO_COVERAGE: 'no-coverage'
          - os: ubuntu
            gap-branch: master
            GAP_PKGS_TO_BUILD: 'profiling'
            HPCGAP: 'no'
            ABI: 32
          - os: macos
            gap-branch: master
            GAP_PKGS_TO_BUILD: 'profiling'
            HPCGAP: 'no'

    steps:
      - uses: actions/checkout@v2
      - uses: gap-actions/setup-gap@v2
        with:
          GAPBRANCH: ${{ matrix.gap-branch }}
          ABI: ${{ matrix.ABI }}
          GAP_PKGS_TO_BUILD: ${{ matrix.GAP_PKGS_TO_BUILD }}
          HPCGAP: ${{ matrix.HPCGAP }}
      - uses: gap-actions/build-pkg@v1
      #Â HACK: disable test file that currently fails on macOS in GitHub Actions
      - run: rm tst/sendstringbackground.tst
        if: ${{ runner.os == 'macOS' }}
      - uses: gap-actions/run-pkg-tests@v2
        with:
          NO_COVERAGE: ${{ matrix.NO_COVERAGE }}
      - uses: gap-actions/process-coverage@v2
        if: ${{ matrix.NO_COVERAGE == '' }}
      - uses: codecov/codecov-action@v2

  test-cygwin:
    name: "cygwin64 - GAP master - HPCGAP no"
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    runs-on: windows-latest
    env:
      CHERE_INVOKING: 1
    steps:
      - uses: actions/checkout@v2
      - uses: gap-actions/setup-cygwin@v1
      - uses: gap-actions/setup-gap@cygwin-v2
        with:
          GAP_PKGS_TO_BUILD: 'profiling'
      - uses: gap-actions/build-pkg@cygwin-v1
      - uses: gap-actions/run-pkg-tests@cygwin-v2
      - uses: gap-actions/process-coverage@cygwin-v2
      - uses: codecov/codecov-action@v2
      - name: "Setup tmate session"
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 15

  # The documentation job
  manual:
    name: Build manuals
    runs-on: ubuntu-latest
    # Don't run this twice on PRs for branches pushed to the same repository
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}

    steps:
      - uses: actions/checkout@v2
      - uses: gap-actions/setup-gap@v2
      - uses: gap-actions/build-pkg-docs@v1
        with:
          use-latex: 'true'
      - name: 'Upload documentation'
        uses: actions/upload-artifact@v2
        with:
          retention-days: 7
          name: manual
          path: ./doc/manual.pdf
